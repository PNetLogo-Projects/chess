to knight-mark-valid-move-spots
  let always-mark? false
  knight-mark-move-spots always-mark?
  pieces-ensure-moves-will-not-danger-king
end

to knight-mark-valid-capture-spots [always-mark?]
  knight-mark-move-spots always-mark?
end

to knight-mark-move-spots [always-mark?]
  foreach (list [-2 1] [1 -2] [1 2] [2 1] [2 -1] [-1 2] [-1 -2] [-2 -1]) [
    offset-list ->
    
    let xoffset (item 0 offset-list)
    let yoffset (item 1 offset-list)
    if knight-is-valid-move? xoffset yoffset always-mark?
    [
      ask patch-at xoffset yoffset
      [set marked? true]
    ]
  ]
end

to-report knight-is-valid-move? [xoffset yoffset ignore-obstacles?]
  let knight-xcor xcor + xoffset
  let knight-ycor ycor + yoffset
  let turtles-at-new-coordinates (turtles with [xcor = knight-xcor and ycor = knight-ycor])
  
  report (pieces-still-within-bounds? knight-xcor knight-ycor) and (
    ignore-obstacles? or 
    not any? turtles-at-new-coordinates or
    count turtles-at-new-coordinates with [color != [color] of myself] > 0
    )
end