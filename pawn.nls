to pawn-mark-valid-move-spots
  if moved? and heading = 0
  [pieces-mark-direction pieces-same-direction pieces-up-direction 1]
  if moved? and heading = 180
  [pieces-mark-direction pieces-same-direction pieces-down-direction 1]
  
  if not moved? and heading = 0
  [pieces-mark-direction pieces-same-direction pieces-up-direction 2]
  if not moved? and heading = 180
  [pieces-mark-direction pieces-same-direction pieces-down-direction 2]
  if not moved?
  [
    ask turtles-on patch-ahead 2
    [set marked? false]
  ]
  
  pawn-mark-valid-capture-spots false
end

to pawn-mark-valid-capture-spots [always-mark]
  let direction ((heading / -90) + 1)
  let my-color  color
  ask (patch-set (patch-at -1 direction) (patch-at 1 direction))
  [
    if any? turtles-here with [color != my-color] or always-mark
    [set marked? true]
  ]
  ask (patch-set (patch-left-and-ahead 90 1) (patch-right-and-ahead 90 1))
  [
    ask pawns-here with [can-be-enpassanted?]
    [
      ask (patch-set (patch-ahead -1)) with [not any? turtles-here]
      [set marked? true]
    ]
  ]
end